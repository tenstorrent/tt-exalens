name: "Run all tests"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# TODO: See permissions @ https://github.dev/tenstorrent/tt-metal/blob/cbb7fb8182a29724ba33402c3ea2dc67d8eb6c73/.github/workflows/all-post-commit-workflows.yaml

jobs:
  static-checks:
    uses: ./.github/workflows/static-checks.yaml
  build:
    uses: ./.github/workflows/build-dbd.yaml
  
  
  build-and-run-unit-tests:
    needs:
      - build
    strategy:
      matrix:
        runner-info: [
          {arch: "grayskull", runs-on: ["in-service", "e150"]},
          {arch: "wormhole_b0", runs-on: ["in-service", "n150"]},
          {arch: "wormhole_b0", runs-on: ["in-service", "n300"]},
        ]
    env:
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      CONFIG: ci
      # So we can get all the makefile output we want
      VERBOSE: 5
      LOGGER_LEVEL: INFO
    runs-on: ${{ matrix.runner-info.runs-on }}
    container:
      image: ghcr.io/${{ github.repository }}/tt-debuda-ubuntu-22-04:latest
      options: --user root --device /dev/tenstorrent/0
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
    name: Build and run unit test on ${{ matrix.runner-info.arch }}
    steps:
        # This is a workaround for git's ownership problems
      - name: Change ownership of /github/home
        run: chmod -R 777 /github/home
      - name: Git safe dir
        run: git config --global --add safe.directory '*'
      
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
      - uses: actions/download-artifact@v4
        with:
          name: dbd-build
          path: build
      - name: Update permissions for downloaded binaries
        run: |
          chmod +x build/bin/debuda-server-standalone
          chmod +x build/bin/debuda_server_unit_tests
      - name: Run C++ tests
        run: |
          make dbd_server_unit_tests_run_only
      - name: Run Python tests for ttlens library
        run: |
          python3 -m unittest discover -v -t . -s test/ttlens -p *test*.py
      - name: Run Python tests for Debuda app 
        run: |
          python3 -m unittest discover -v -t . -s test/app -p *test*.py
  

  wheel-test:
    needs:
      - build
    strategy:
      matrix:
        runner-info: [
          {arch: "grayskull", runs-on: ["in-service", "e150"]},
          {arch: "wormhole_b0", runs-on: ["in-service", "n150"]},
          {arch: "wormhole_b0", runs-on: ["in-service", "n300"]},
        ]
    env:
      ARCH_NAME: ${{ matrix.runner-info.arch }}
      CONFIG: ci
      # So we can get all the makefile output we want
      VERBOSE: 5
    runs-on: ${{ matrix.runner-info.runs-on }}
    container:
      image: ghcr.io/${{ github.repository }}/tt-debuda-ubuntu-22-04:latest
      options: --user root --device /dev/tenstorrent/0
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
    name: Build, install wheel and test it on ${{ matrix.runner-info.arch }}
    steps:
        # This is a workaround for git's ownership problems
      - name: Change ownership of /github/home
        run: chmod -R 777 /github/home
      - name: Git safe dir
        run: git config --global --add safe.directory '*'

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          lfs: true
      - uses: actions/download-artifact@v4
        with:
          name: dbd-build
          path: build
      - name: Update permissions for downloaded binaries
        run: |
          chmod +x build/bin/debuda-server-standalone
          chmod +x build/bin/debuda_server_unit_tests
      - name: Install wheel
        run: |
          pip install build/debuda_wheel/*.whl
      - name: Run tests
        run: |
          # Change to the wheel tests directory so that we are certain we don't import dev files
          cd test/wheel
          ./run-wheel.sh